// Code generated by mockery 2.9.4. DO NOT EDIT.

package mocks

import (
	errors "minesweeper-api/errors"

	mock "github.com/stretchr/testify/mock"

	models "minesweeper-api/models"

	uuid "github.com/google/uuid"
)

// GamesRepository is an autogenerated mock type for the GamesRepository type
type GamesRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: game
func (_m *GamesRepository) Create(game *models.Game) *errors.ApiError {
	ret := _m.Called(game)

	var r0 *errors.ApiError
	if rf, ok := ret.Get(0).(func(*models.Game) *errors.ApiError); ok {
		r0 = rf(game)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*errors.ApiError)
		}
	}

	return r0
}

// FindById provides a mock function with given fields: _a0, hasToPreload
func (_m *GamesRepository) FindById(_a0 *uuid.UUID, hasToPreload bool) (*models.Game, *errors.ApiError) {
	ret := _m.Called(_a0, hasToPreload)

	var r0 *models.Game
	if rf, ok := ret.Get(0).(func(*uuid.UUID, bool) *models.Game); ok {
		r0 = rf(_a0, hasToPreload)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Game)
		}
	}

	var r1 *errors.ApiError
	if rf, ok := ret.Get(1).(func(*uuid.UUID, bool) *errors.ApiError); ok {
		r1 = rf(_a0, hasToPreload)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*errors.ApiError)
		}
	}

	return r0, r1
}

// Update provides a mock function with given fields: game
func (_m *GamesRepository) Update(game *models.Game) *errors.ApiError {
	ret := _m.Called(game)

	var r0 *errors.ApiError
	if rf, ok := ret.Get(0).(func(*models.Game) *errors.ApiError); ok {
		r0 = rf(game)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*errors.ApiError)
		}
	}

	return r0
}
